server:
  port: 8090
spring:
  profiles:
    active:
      - prod
  datasource:
    url: jdbc:mysql://186g.cn:3306/shiro_action?useSSL=false&characterEncoding=UTF8&&serverTimezone=Asia/Shanghai
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    username: root
    password: root
    druid:
      # 连接池的配置信息
      # 初始化大小，最小，最大
      initial-size: 5
      min-idle: 5
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,slf4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
      # 配置DruidStatFilter
      web-stat-filter:
        enabled: true
        url-pattern: "/*"
        exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"
      # 配置DruidStatViewServlet
      stat-view-servlet:
        url-pattern: "/druid/*"
        # IP白名单(没有配置或者为空，则允许所有访问)
        allow: 127.0.0.1,192.168.163.1
        # IP黑名单 (存在共同时，deny优先于allow)
        deny: 192.168.1.73
        #  禁用HTML页面上的“Reset All”功能
        reset-enable: false
        # 登录名
        login-username: admin
        # 登录密码
        login-password: 123456
        #下面这两个配置，可以在每次连接的时候判断一些连接是否有效
      test-on-borrow: true
      test-while-idle: true
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone:
      GMT+8
  redis:
    host: 127.0.0.1
    port: 6379
  cache:
    type: redis
    redis:
      time-to-live: 6000
  mail:
    host: smtp.qq.com
    username: 374145228@qq.com
    password: Snjytak971140
    default-encoding: utf-8
  mvc:
    throw-exception-if-no-handler-found: true
    hiddenmethod:
      filter:
        enabled: true  #解决POST提交时Request method 'POST' not supported的问题
  resources:
    add-mappings:  true 
  thymeleaf:
    cache: false #cache: 是否缓存，开发模式下设置为false，避免改了模板还要重启服务器，线上设置为true，可以提高性能。
    prefix: classpath:/templates/  #prefix：指定模板所在的目录
    check-template-location: true  #check-tempate-location: 检查模板路径是否存在
    suffix:  .html
    #encoding: UTF-8
    #content-type: text/html
    mode: HTML5
  main:
    allow-bean-definition-overriding: true #当遇到同样名字的时候，是否允许覆盖注册
#mybatis:
#  configuration:
#    map-underscore-to-camel-case: true
#  mapper-locations:
#  - classpath:mapper/*.xml
mybatis-plus:
  type-aliases-package: im.zhaojun.model
  mapper-locations: classpath:mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    
logging:
  level:
    im.zhaojun: info
    org.crazycake.shiro: info
  pattern:
    console: '%clr(%d{${LOG_DATEFORMAT_PATTERN:yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:%5p}) %clr(${PID}){magenta} %clr(---){faint} %clr([%15.15t]){faint} [%15.15X{username}] [%15.15X{ip}] %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}'
    

shiro-action:
  log:
    operation: false
    login: false
  session-timeout: 1800
  perms-cache-timeout: 3600
  super-admin-username: admin
  retry-count: 5
  retry-timeout: 300
  login-verify: true
#  oauth2-provider:
#    github:
#      client-id:   your github oauth2 clientId
#      client-secret: your github oauth2 clientSecret
#      redirect-url: http://localhost:8080/oauth2/callback/github
#    gitee:
#      client-id: your gitee oauth2 clientId
#      client-secret: your gitee oauth2 clientSecret
#      redirect-url: http://localhost:8080/oauth2/callback/gitee
  

